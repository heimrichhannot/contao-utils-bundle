
window.projectVersion = 'master';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:HeimrichHannot" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot.html">HeimrichHannot</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:HeimrichHannot_UtilsBundle" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle.html">UtilsBundle</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:HeimrichHannot_UtilsBundle_Accordion" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Accordion.html">Accordion</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Accordion_AccordionUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Accordion/AccordionUtil.html">AccordionUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Arrays" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Arrays.html">Arrays</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Arrays_ArrayUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html">ArrayUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Cache" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Cache.html">Cache</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Cache_DatabaseCacheUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Cache/DatabaseCacheUtil.html">DatabaseCacheUtil</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Cache_DatabaseTreeCache" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html">DatabaseTreeCache</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Cache_FileCache" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Cache/FileCache.html">FileCache</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Cache_RemoteImageCache" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Cache/RemoteImageCache.html">RemoteImageCache</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Cache_UtilCacheWarmer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Cache/UtilCacheWarmer.html">UtilCacheWarmer</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Choice" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Choice.html">Choice</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Choice_AbstractChoice" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html">AbstractChoice</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Choice_DataContainerChoice" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Choice/DataContainerChoice.html">DataContainerChoice</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Choice_FieldChoice" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Choice/FieldChoice.html">FieldChoice</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Choice_MessageChoice" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Choice/MessageChoice.html">MessageChoice</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Choice_ModelInstanceChoice" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Choice/ModelInstanceChoice.html">ModelInstanceChoice</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Choice_TwigTemplateChoice" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Choice/TwigTemplateChoice.html">TwigTemplateChoice</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Classes" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Classes.html">Classes</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Classes_ClassUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Classes/ClassUtil.html">ClassUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Container" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Container.html">Container</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Container_ContainerUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Container/ContainerUtil.html">ContainerUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Database" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Database.html">Database</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Database_DatabaseUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html">DatabaseUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Date" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Date.html">Date</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Date_DateUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Date/DateUtil.html">DateUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Dca" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Dca.html">Dca</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Dca_DcaUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Dca/DcaUtil.html">DcaUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_DependencyInjection" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/DependencyInjection.html">DependencyInjection</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_DependencyInjection_Configuration" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/DependencyInjection/Configuration.html">Configuration</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_DependencyInjection_UtilsBundleExtension" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/DependencyInjection/UtilsBundleExtension.html">UtilsBundleExtension</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Driver" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Driver.html">Driver</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Driver_DC_Table_Utils" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Driver/DC_Table_Utils.html">DC_Table_Utils</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Event" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Event.html">Event</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Event_RenderTwigTemplateEvent" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Event/RenderTwigTemplateEvent.html">RenderTwigTemplateEvent</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_EventListener" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/EventListener.html">EventListener</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_EventListener_FrontendPageListener" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/EventListener/FrontendPageListener.html">FrontendPageListener</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_EventListener_InsertTagsListener" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/EventListener/InsertTagsListener.html">InsertTagsListener</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_File" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/File.html">File</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_File_FileArchiveUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/File/FileArchiveUtil.html">FileArchiveUtil</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_File_FileUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/File/FileUtil.html">FileUtil</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_File_FolderUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/File/FolderUtil.html">FolderUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Form" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Form.html">Form</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Form_FormUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Form/FormUtil.html">FormUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Image" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Image.html">Image</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Image_ImageUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Image/ImageUtil.html">ImageUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Location" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Location.html">Location</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Location_LocationUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Location/LocationUtil.html">LocationUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Member" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Member.html">Member</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Member_MemberUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Member/MemberUtil.html">MemberUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Model" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Model.html">Model</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Model_CfgTagModel" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Model/CfgTagModel.html">CfgTagModel</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Model_ModelUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Model/ModelUtil.html">ModelUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Module" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Module.html">Module</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Module_ModuleUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Module/ModuleUtil.html">ModuleUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Pagination" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Pagination.html">Pagination</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Pagination_TextualPagination" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Pagination/TextualPagination.html">TextualPagination</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Pdf" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Pdf.html">Pdf</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Pdf_AbstractPdfWriter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html">AbstractPdfWriter</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Pdf_FPDIWriter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html">FPDIWriter</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Pdf_PdfPreview" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Pdf/PdfPreview.html">PdfPreview</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Pdf_PdfWriter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html">PdfWriter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Request" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Request.html">Request</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Request_CurlRequest" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Request/CurlRequest.html">CurlRequest</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Request_CurlRequestUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html">CurlRequestUtil</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Request_HttpRequestInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html">HttpRequestInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Routing" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Routing.html">Routing</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Routing_RoutingUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Routing/RoutingUtil.html">RoutingUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Rsce" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Rsce.html">Rsce</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Rsce_RsceUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Rsce/RsceUtil.html">RsceUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Salutation" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Salutation.html">Salutation</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Salutation_SalutationUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Salutation/SalutationUtil.html">SalutationUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Security" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Security.html">Security</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Security_CodeUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Security/CodeUtil.html">CodeUtil</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Security_EncryptionUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Security/EncryptionUtil.html">EncryptionUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_String" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/String.html">String</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_String_StringUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/String/StringUtil.html">StringUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Template" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Template.html">Template</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Template_TemplateUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Template/TemplateUtil.html">TemplateUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Twig" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Twig.html">Twig</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Twig_ArrayExtension" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Twig/ArrayExtension.html">ArrayExtension</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Twig_DateExtension" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Twig/DateExtension.html">DateExtension</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Twig_DownloadExtension" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html">DownloadExtension</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Twig_FileExtension" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Twig/FileExtension.html">FileExtension</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Twig_ImageExtension" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Twig/ImageExtension.html">ImageExtension</a>                    </div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_Twig_StringExtension" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Twig/StringExtension.html">StringExtension</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_Url" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/Url.html">Url</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_Url_UrlUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/Url/UrlUtil.html">UrlUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:HeimrichHannot_UtilsBundle_User" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="HeimrichHannot/UtilsBundle/User.html">User</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:HeimrichHannot_UtilsBundle_User_UserUtil" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/User/UserUtil.html">UserUtil</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:HeimrichHannot_UtilsBundle_HeimrichHannotContaoUtilsBundle" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="HeimrichHannot/UtilsBundle/HeimrichHannotContaoUtilsBundle.html">HeimrichHannotContaoUtilsBundle</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "HeimrichHannot.html", "name": "HeimrichHannot", "doc": "Namespace HeimrichHannot"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle.html", "name": "HeimrichHannot\\UtilsBundle", "doc": "Namespace HeimrichHannot\\UtilsBundle"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Accordion.html", "name": "HeimrichHannot\\UtilsBundle\\Accordion", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Accordion"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Arrays.html", "name": "HeimrichHannot\\UtilsBundle\\Arrays", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Arrays"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Cache.html", "name": "HeimrichHannot\\UtilsBundle\\Cache", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Cache"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Choice.html", "name": "HeimrichHannot\\UtilsBundle\\Choice", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Choice"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Classes.html", "name": "HeimrichHannot\\UtilsBundle\\Classes", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Classes"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Container.html", "name": "HeimrichHannot\\UtilsBundle\\Container", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Container"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Database.html", "name": "HeimrichHannot\\UtilsBundle\\Database", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Database"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Date.html", "name": "HeimrichHannot\\UtilsBundle\\Date", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Date"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Dca.html", "name": "HeimrichHannot\\UtilsBundle\\Dca", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Dca"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/DependencyInjection.html", "name": "HeimrichHannot\\UtilsBundle\\DependencyInjection", "doc": "Namespace HeimrichHannot\\UtilsBundle\\DependencyInjection"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Driver.html", "name": "HeimrichHannot\\UtilsBundle\\Driver", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Driver"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Event.html", "name": "HeimrichHannot\\UtilsBundle\\Event", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Event"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/EventListener.html", "name": "HeimrichHannot\\UtilsBundle\\EventListener", "doc": "Namespace HeimrichHannot\\UtilsBundle\\EventListener"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/File.html", "name": "HeimrichHannot\\UtilsBundle\\File", "doc": "Namespace HeimrichHannot\\UtilsBundle\\File"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Form.html", "name": "HeimrichHannot\\UtilsBundle\\Form", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Form"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Image.html", "name": "HeimrichHannot\\UtilsBundle\\Image", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Image"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Location.html", "name": "HeimrichHannot\\UtilsBundle\\Location", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Location"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Member.html", "name": "HeimrichHannot\\UtilsBundle\\Member", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Member"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Model.html", "name": "HeimrichHannot\\UtilsBundle\\Model", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Model"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Module.html", "name": "HeimrichHannot\\UtilsBundle\\Module", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Module"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Pagination.html", "name": "HeimrichHannot\\UtilsBundle\\Pagination", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Pagination"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Pdf.html", "name": "HeimrichHannot\\UtilsBundle\\Pdf", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Pdf"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Request.html", "name": "HeimrichHannot\\UtilsBundle\\Request", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Request"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Routing.html", "name": "HeimrichHannot\\UtilsBundle\\Routing", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Routing"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Rsce.html", "name": "HeimrichHannot\\UtilsBundle\\Rsce", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Rsce"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Salutation.html", "name": "HeimrichHannot\\UtilsBundle\\Salutation", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Salutation"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Security.html", "name": "HeimrichHannot\\UtilsBundle\\Security", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Security"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/String.html", "name": "HeimrichHannot\\UtilsBundle\\String", "doc": "Namespace HeimrichHannot\\UtilsBundle\\String"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Template.html", "name": "HeimrichHannot\\UtilsBundle\\Template", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Template"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Twig.html", "name": "HeimrichHannot\\UtilsBundle\\Twig", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Twig"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/Url.html", "name": "HeimrichHannot\\UtilsBundle\\Url", "doc": "Namespace HeimrichHannot\\UtilsBundle\\Url"},{"type": "Namespace", "link": "HeimrichHannot/UtilsBundle/User.html", "name": "HeimrichHannot\\UtilsBundle\\User", "doc": "Namespace HeimrichHannot\\UtilsBundle\\User"},
            {"type": "Interface", "fromName": "HeimrichHannot\\UtilsBundle\\Request", "fromLink": "HeimrichHannot/UtilsBundle/Request.html", "link": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html", "name": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface", "fromLink": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html", "link": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html#method_init", "name": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface::init", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface", "fromLink": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html", "link": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html#method_setOption", "name": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface::setOption", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface", "fromLink": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html", "link": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html#method_execute", "name": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface::execute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface", "fromLink": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html", "link": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html#method_getInfo", "name": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface::getInfo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface", "fromLink": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html", "link": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html#method_close", "name": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface::close", "doc": "&quot;&quot;"},
            
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Accordion", "fromLink": "HeimrichHannot/UtilsBundle/Accordion.html", "link": "HeimrichHannot/UtilsBundle/Accordion/AccordionUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Accordion\\AccordionUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Accordion\\AccordionUtil", "fromLink": "HeimrichHannot/UtilsBundle/Accordion/AccordionUtil.html", "link": "HeimrichHannot/UtilsBundle/Accordion/AccordionUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Accordion\\AccordionUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Accordion\\AccordionUtil", "fromLink": "HeimrichHannot/UtilsBundle/Accordion/AccordionUtil.html", "link": "HeimrichHannot/UtilsBundle/Accordion/AccordionUtil.html#method_structureAccordionSingle", "name": "HeimrichHannot\\UtilsBundle\\Accordion\\AccordionUtil::structureAccordionSingle", "doc": "&quot;Adds the following flags to the template data:\n- first\n- last\n- parentId.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Accordion\\AccordionUtil", "fromLink": "HeimrichHannot/UtilsBundle/Accordion/AccordionUtil.html", "link": "HeimrichHannot/UtilsBundle/Accordion/AccordionUtil.html#method_structureAccordionStartStop", "name": "HeimrichHannot\\UtilsBundle\\Accordion\\AccordionUtil::structureAccordionStartStop", "doc": "&quot;Adds the following flags to the template data:\n- first\n- last\n- parentId.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Arrays", "fromLink": "HeimrichHannot/UtilsBundle/Arrays.html", "link": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil", "fromLink": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html", "link": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil", "fromLink": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html", "link": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html#method_filterByPrefixes", "name": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil::filterByPrefixes", "doc": "&quot;Filter an Array by given prefixes.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil", "fromLink": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html", "link": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html#method_aasort", "name": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil::aasort", "doc": "&quot;sort an array alphabetically by some key in the second layer (x =&gt; array(key1, key2, key3)).&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil", "fromLink": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html", "link": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html#method_removeValue", "name": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil::removeValue", "doc": "&quot;Removes a value in an array.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil", "fromLink": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html", "link": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html#method_removePrefix", "name": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil::removePrefix", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil", "fromLink": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html", "link": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html#method_insertInArrayByName", "name": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil::insertInArrayByName", "doc": "&quot;Insert a value into an existing array by key name.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil", "fromLink": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html", "link": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html#method_arrayToObject", "name": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil::arrayToObject", "doc": "&quot;Creates a stdClass from array.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil", "fromLink": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html", "link": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html#method_getArrayRowByFieldValue", "name": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil::getArrayRowByFieldValue", "doc": "&quot;Returns a row of an multidimensional array by field value. Returns false, if no row found.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil", "fromLink": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html", "link": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html#method_flattenArray", "name": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil::flattenArray", "doc": "&quot;Flattens an multidimensional array to one dimension. Keys are not preserved.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil", "fromLink": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html", "link": "HeimrichHannot/UtilsBundle/Arrays/ArrayUtil.html#method_insertBeforeKey", "name": "HeimrichHannot\\UtilsBundle\\Arrays\\ArrayUtil::insertBeforeKey", "doc": "&quot;Insert a new entry before an specific key in array.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Cache", "fromLink": "HeimrichHannot/UtilsBundle/Cache.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseCacheUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseCacheUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseCacheUtil", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseCacheUtil.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseCacheUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseCacheUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseCacheUtil", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseCacheUtil.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseCacheUtil.html#method_keyExists", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseCacheUtil::keyExists", "doc": "&quot;Check for a given cache key.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseCacheUtil", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseCacheUtil.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseCacheUtil.html#method_getValue", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseCacheUtil::getValue", "doc": "&quot;Retrieve a value from cache.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseCacheUtil", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseCacheUtil.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseCacheUtil.html#method_cacheValue", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseCacheUtil::cacheValue", "doc": "&quot;Store a given value to cache.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Cache", "fromLink": "HeimrichHannot/UtilsBundle/Cache.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html#method_loadDataContainer", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache::loadDataContainer", "doc": "&quot;Generate tree cache.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html#method_addConfigToTreeCache", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache::addConfigToTreeCache", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html#method_getChildRecords", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache::getChildRecords", "doc": "&quot;Get all child records for given parent entities.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html#method_getParentRecords", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache::getParentRecords", "doc": "&quot;Get all parent records for given child entity.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html#method_getTreeCache", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache::getTreeCache", "doc": "&quot;Get the tree cache for a given table and key.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html#method_generateCacheTree", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache::generateCacheTree", "doc": "&quot;Generate the flat cache tree.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html#method_generateAllCacheTree", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache::generateAllCacheTree", "doc": "&quot;Generate all cache trees.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html#method_registerDcaToCacheTree", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache::registerDcaToCacheTree", "doc": "&quot;Register a dca to the tree cache.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/DatabaseTreeCache.html#method_purgeCacheTree", "name": "HeimrichHannot\\UtilsBundle\\Cache\\DatabaseTreeCache::purgeCacheTree", "doc": "&quot;Purge the tree cache completely in order to take table relations into consideration.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Cache", "fromLink": "HeimrichHannot/UtilsBundle/Cache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "doc": "&quot;Class FileCache.&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method_exist", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::exist", "doc": "&quot;Checks if a cached file already exist in cache. Namespace is taken into account.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method_get", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::get", "doc": "&quot;Get the file path for the given identifier. Namespace is taken into account.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method_generateCacheName", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::generateCacheName", "doc": "&quot;Generate a file name for cache.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method_getCacheFileName", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::getCacheFileName", "doc": "&quot;Get the cache file name by the given identifier.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method_getCacheFilePath", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::getCacheFilePath", "doc": "&quot;Same as generateCacheName, but returns complete path to cache.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method_getAbsoluteCachePath", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::getAbsoluteCachePath", "doc": "&quot;Returns the absolute path to the cache folder.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method_getNamespace", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::getNamespace", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method_setNamespace", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::setNamespace", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method_getCacheFolder", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::getCacheFolder", "doc": "&quot;The cache folder (without namespace).&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method_setCacheFolder", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::setCacheFolder", "doc": "&quot;Set cache folder (without namespace).&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method_getCacheFolderWithNamespace", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::getCacheFolderWithNamespace", "doc": "&quot;Get the cache folder (including namespace).&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/FileCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/FileCache.html#method_generatePath", "name": "HeimrichHannot\\UtilsBundle\\Cache\\FileCache::generatePath", "doc": "&quot;Recreates the path to the current cache folder.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Cache", "fromLink": "HeimrichHannot/UtilsBundle/Cache.html", "link": "HeimrichHannot/UtilsBundle/Cache/RemoteImageCache.html", "name": "HeimrichHannot\\UtilsBundle\\Cache\\RemoteImageCache", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\RemoteImageCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/RemoteImageCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/RemoteImageCache.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Cache\\RemoteImageCache::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\RemoteImageCache", "fromLink": "HeimrichHannot/UtilsBundle/Cache/RemoteImageCache.html", "link": "HeimrichHannot/UtilsBundle/Cache/RemoteImageCache.html#method_get", "name": "HeimrichHannot\\UtilsBundle\\Cache\\RemoteImageCache::get", "doc": "&quot;Get a remote file from cache and cache file, if not already in cache.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Cache", "fromLink": "HeimrichHannot/UtilsBundle/Cache.html", "link": "HeimrichHannot/UtilsBundle/Cache/UtilCacheWarmer.html", "name": "HeimrichHannot\\UtilsBundle\\Cache\\UtilCacheWarmer", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\UtilCacheWarmer", "fromLink": "HeimrichHannot/UtilsBundle/Cache/UtilCacheWarmer.html", "link": "HeimrichHannot/UtilsBundle/Cache/UtilCacheWarmer.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Cache\\UtilCacheWarmer::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\UtilCacheWarmer", "fromLink": "HeimrichHannot/UtilsBundle/Cache/UtilCacheWarmer.html", "link": "HeimrichHannot/UtilsBundle/Cache/UtilCacheWarmer.html#method_warmUp", "name": "HeimrichHannot\\UtilsBundle\\Cache\\UtilCacheWarmer::warmUp", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Cache\\UtilCacheWarmer", "fromLink": "HeimrichHannot/UtilsBundle/Cache/UtilCacheWarmer.html", "link": "HeimrichHannot/UtilsBundle/Cache/UtilCacheWarmer.html#method_isOptional", "name": "HeimrichHannot\\UtilsBundle\\Cache\\UtilCacheWarmer::isOptional", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Choice", "fromLink": "HeimrichHannot/UtilsBundle/Choice.html", "link": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html", "name": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice", "fromLink": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html", "link": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice", "fromLink": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html", "link": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html#method_getContext", "name": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice::getContext", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice", "fromLink": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html", "link": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html#method_setContext", "name": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice::setContext", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice", "fromLink": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html", "link": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html#method_getChoices", "name": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice::getChoices", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice", "fromLink": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html", "link": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html#method_getCachedChoices", "name": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice::getCachedChoices", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice", "fromLink": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html", "link": "HeimrichHannot/UtilsBundle/Choice/AbstractChoice.html#method_collect", "name": "HeimrichHannot\\UtilsBundle\\Choice\\AbstractChoice::collect", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Choice", "fromLink": "HeimrichHannot/UtilsBundle/Choice.html", "link": "HeimrichHannot/UtilsBundle/Choice/DataContainerChoice.html", "name": "HeimrichHannot\\UtilsBundle\\Choice\\DataContainerChoice", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Choice\\DataContainerChoice", "fromLink": "HeimrichHannot/UtilsBundle/Choice/DataContainerChoice.html", "link": "HeimrichHannot/UtilsBundle/Choice/DataContainerChoice.html#method_collect", "name": "HeimrichHannot\\UtilsBundle\\Choice\\DataContainerChoice::collect", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Choice", "fromLink": "HeimrichHannot/UtilsBundle/Choice.html", "link": "HeimrichHannot/UtilsBundle/Choice/FieldChoice.html", "name": "HeimrichHannot\\UtilsBundle\\Choice\\FieldChoice", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Choice\\FieldChoice", "fromLink": "HeimrichHannot/UtilsBundle/Choice/FieldChoice.html", "link": "HeimrichHannot/UtilsBundle/Choice/FieldChoice.html#method_collect", "name": "HeimrichHannot\\UtilsBundle\\Choice\\FieldChoice::collect", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Choice", "fromLink": "HeimrichHannot/UtilsBundle/Choice.html", "link": "HeimrichHannot/UtilsBundle/Choice/MessageChoice.html", "name": "HeimrichHannot\\UtilsBundle\\Choice\\MessageChoice", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Choice\\MessageChoice", "fromLink": "HeimrichHannot/UtilsBundle/Choice/MessageChoice.html", "link": "HeimrichHannot/UtilsBundle/Choice/MessageChoice.html#method_collect", "name": "HeimrichHannot\\UtilsBundle\\Choice\\MessageChoice::collect", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Choice", "fromLink": "HeimrichHannot/UtilsBundle/Choice.html", "link": "HeimrichHannot/UtilsBundle/Choice/ModelInstanceChoice.html", "name": "HeimrichHannot\\UtilsBundle\\Choice\\ModelInstanceChoice", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Choice\\ModelInstanceChoice", "fromLink": "HeimrichHannot/UtilsBundle/Choice/ModelInstanceChoice.html", "link": "HeimrichHannot/UtilsBundle/Choice/ModelInstanceChoice.html#method_collect", "name": "HeimrichHannot\\UtilsBundle\\Choice\\ModelInstanceChoice::collect", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Choice", "fromLink": "HeimrichHannot/UtilsBundle/Choice.html", "link": "HeimrichHannot/UtilsBundle/Choice/TwigTemplateChoice.html", "name": "HeimrichHannot\\UtilsBundle\\Choice\\TwigTemplateChoice", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Choice\\TwigTemplateChoice", "fromLink": "HeimrichHannot/UtilsBundle/Choice/TwigTemplateChoice.html", "link": "HeimrichHannot/UtilsBundle/Choice/TwigTemplateChoice.html#method_collect", "name": "HeimrichHannot\\UtilsBundle\\Choice\\TwigTemplateChoice::collect", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Classes", "fromLink": "HeimrichHannot/UtilsBundle/Classes.html", "link": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil", "fromLink": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html", "link": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil::__construct", "doc": "&quot;ClassUtil constructor.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil", "fromLink": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html", "link": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html#method_getParentClasses", "name": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil::getParentClasses", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil", "fromLink": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html", "link": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html#method_getConstantsByPrefixes", "name": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil::getConstantsByPrefixes", "doc": "&quot;Filter class constants by given prefixes and return the extracted constants.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil", "fromLink": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html", "link": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html#method_getClassesInNamespace", "name": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil::getClassesInNamespace", "doc": "&quot;Returns all classes in the given namespace.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil", "fromLink": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html", "link": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html#method_getChildClasses", "name": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil::getChildClasses", "doc": "&quot;Returns all children of a given class.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil", "fromLink": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html", "link": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html#method_jsonSerialize", "name": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil::jsonSerialize", "doc": "&quot;Serialize a class object to JSON by iterating over all public getters (get(), is(), .&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil", "fromLink": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html", "link": "HeimrichHannot/UtilsBundle/Classes/ClassUtil.html#method_callInaccessibleMethod", "name": "HeimrichHannot\\UtilsBundle\\Classes\\ClassUtil::callInaccessibleMethod", "doc": "&quot;Calls an object&#039;s method which is inaccessible.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Container", "fromLink": "HeimrichHannot/UtilsBundle/Container.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method_getActiveBundles", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::getActiveBundles", "doc": "&quot;Returns the active bundles.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method_isBundleActive", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::isBundleActive", "doc": "&quot;Checks if some bundle is active. Pass in the class name (e.g. &#039;HeimrichHannot\\FilterBundle\\HeimrichHannotContaoFilterBundle&#039; or the legacy Contao 3 name like &#039;news&#039;).&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method_isBackend", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::isBackend", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method_isFrontend", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::isFrontend", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method_isInstall", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::isInstall", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method_getCurrentRequest", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::getCurrentRequest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method_log", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::log", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method_getProjectDir", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::getProjectDir", "doc": "&quot;Returns the project root path.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method_getWebDir", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::getWebDir", "doc": "&quot;Returns the web folder path.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method_getBundlePath", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::getBundlePath", "doc": "&quot;Returns the path to the bundle in vendor folder\nAttention: resolves symlinks!&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method_getBundleResourcePath", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::getBundleResourcePath", "doc": "&quot;Returns the path or paths to a ressource within a bundle\nAttention: resolves symlinks!&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil", "fromLink": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html", "link": "HeimrichHannot/UtilsBundle/Container/ContainerUtil.html#method_mergeConfigFile", "name": "HeimrichHannot\\UtilsBundle\\Container\\ContainerUtil::mergeConfigFile", "doc": "&quot;Recursively merges a config.yml with a $extensionConfigs array in the context of ExtensionPluginInterface::getExtensionConfig().&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Database", "fromLink": "HeimrichHannot/UtilsBundle/Database.html", "link": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil", "fromLink": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html", "link": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil", "fromLink": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html", "link": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html#method_processInPieces", "name": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil::processInPieces", "doc": "&quot;Process a query in pieces, run callback within each cycle.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil", "fromLink": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html", "link": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html#method_doBulkInsert", "name": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil::doBulkInsert", "doc": "&quot;Bulk insert SQL of given data.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil", "fromLink": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html", "link": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html#method_createWhereForSerializedBlob", "name": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil::createWhereForSerializedBlob", "doc": "&quot;Create a where condition for a field that contains a serialized blob.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil", "fromLink": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html", "link": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html#method_transformVerboseOperator", "name": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil::transformVerboseOperator", "doc": "&quot;Transforms verbose operators to valid MySQL operators (aka junctors).&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil", "fromLink": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html", "link": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html#method_computeCondition", "name": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil::computeCondition", "doc": "&quot;Computes a MySQL condition appropriate for the given operator.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil", "fromLink": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html", "link": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html#method_composeWhereForQueryBuilder", "name": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil::composeWhereForQueryBuilder", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil", "fromLink": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html", "link": "HeimrichHannot/UtilsBundle/Database/DatabaseUtil.html#method_getChildRecords", "name": "HeimrichHannot\\UtilsBundle\\Database\\DatabaseUtil::getChildRecords", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Date", "fromLink": "HeimrichHannot/UtilsBundle/Date.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_getTimeStamp", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::getTimeStamp", "doc": "&quot;Get the timestamp based on input date, no matter input is timestamp or string date.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_getTimePeriodInSeconds", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::getTimePeriodInSeconds", "doc": "&quot;Returns the time in seconds of an given time period.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_transformPhpDateFormatToRFC3339", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::transformPhpDateFormatToRFC3339", "doc": "&quot;Format a php date formate pattern to an RFC3339 compliant format.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_transformPhpDateFormatToISO8601", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::transformPhpDateFormatToISO8601", "doc": "&quot;Format a php date formate pattern to an ISO8601 compliant format.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_getGMTMidnightTstamp", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::getGMTMidnightTstamp", "doc": "&quot;transfer a given timestamp to a gmt timestamp at midnight.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_isMonthInDateFormat", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::isMonthInDateFormat", "doc": "&quot;Checks if a form of month is available in the date format.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_isDayInDateFormat", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::isDayInDateFormat", "doc": "&quot;Checks if a form of day is available in the date format.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_isYearInDateFormat", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::isYearInDateFormat", "doc": "&quot;Checks if a form of year is available in the date format.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_getMonthTranslationMap", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::getMonthTranslationMap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_getShortMonthTranslationMap", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::getShortMonthTranslationMap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_translateMonthsToEnglish", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::translateMonthsToEnglish", "doc": "&quot;Translates available months inside a given string into their English representations taking into account the current language.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_translateMonths", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::translateMonths", "doc": "&quot;Translates available months inside a given string from English to the current language.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_getFormattedDateTime", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::getFormattedDateTime", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Date/DateUtil.html", "link": "HeimrichHannot/UtilsBundle/Date/DateUtil.html#method_getFormattedDateTimeByEvent", "name": "HeimrichHannot\\UtilsBundle\\Date\\DateUtil::getFormattedDateTimeByEvent", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Dca", "fromLink": "HeimrichHannot/UtilsBundle/Dca.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_getEditLink", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::getEditLink", "doc": "&quot;Get a contao backend modal edit link.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_getModalEditLink", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::getModalEditLink", "doc": "&quot;Get a contao backend modal edit link.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_getArchiveModalEditLink", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::getArchiveModalEditLink", "doc": "&quot;Get a contao backend modal archive edit link.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_getPopupWizardLink", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::getPopupWizardLink", "doc": "&quot;Get a contao backend popup link.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_setDefaultsFromDca", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::setDefaultsFromDca", "doc": "&quot;Set initial $varData from dca.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_getConfigByArrayOrCallbackOrFunction", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::getConfigByArrayOrCallbackOrFunction", "doc": "&quot;Retrieves an array from a dca config (in most cases eval) in the following priorities:.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_setDateAdded", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::setDateAdded", "doc": "&quot;Sets the current date as the date added -&gt; usually used on submit.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_setDateAddedOnCopy", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::setDateAddedOnCopy", "doc": "&quot;Sets the current date as the date added -&gt; usually used on copy.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_getFields", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::getFields", "doc": "&quot;Returns a list of fields as an option array for dca fields.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_addOverridableFields", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::addOverridableFields", "doc": "&quot;Adds an override selector to every field in $fields to the dca associated with $destinationTable.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_getOverridableProperty", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::getOverridableProperty", "doc": "&quot;Retrieves a property of given contao model instances by &lt;em&gt;ascending&lt;\/em&gt; priority, i.e. the last instance of $instances\nwill have the highest priority.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_flattenPaletteForSubEntities", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::flattenPaletteForSubEntities", "doc": "&quot;This function transforms an entity&#039;s palette (that can also contain sub palettes and concatenated type selectors) to a flatten\npalette where every field can be overridden.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_generateAlias", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::generateAlias", "doc": "&quot;Generate an alias.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_addAuthorFieldAndCallback", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::addAuthorFieldAndCallback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_setAuthorIDOnCreate", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::setAuthorIDOnCreate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_modifyAuthorPaletteOnLoad", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::modifyAuthorPaletteOnLoad", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_getDataContainers", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::getDataContainers", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_getNewNotificationTypeArray", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::getNewNotificationTypeArray", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_addAliasToDca", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::addAliasToDca", "doc": "&quot;Adds an alias field to the dca and to the desired palettes.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_getLocalizedFieldName", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::getLocalizedFieldName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_loadDc", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::loadDc", "doc": "&quot;Load a data container in a testable way.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_loadLanguageFile", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::loadLanguageFile", "doc": "&quot;Load a language file in a testable way.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_isDcMultilingual", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::isDcMultilingual", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_generateDcOperationsButtons", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::generateDcOperationsButtons", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_doGenerateDcOperationsButtons", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::doGenerateDcOperationsButtons", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_generateSitemap", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::generateSitemap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil", "fromLink": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html", "link": "HeimrichHannot/UtilsBundle/Dca/DcaUtil.html#method_getDCTable", "name": "HeimrichHannot\\UtilsBundle\\Dca\\DcaUtil::getDCTable", "doc": "&quot;Mostly used for Form::prepareSpecialValueForOutput().&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\DependencyInjection", "fromLink": "HeimrichHannot/UtilsBundle/DependencyInjection.html", "link": "HeimrichHannot/UtilsBundle/DependencyInjection/Configuration.html", "name": "HeimrichHannot\\UtilsBundle\\DependencyInjection\\Configuration", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\DependencyInjection\\Configuration", "fromLink": "HeimrichHannot/UtilsBundle/DependencyInjection/Configuration.html", "link": "HeimrichHannot/UtilsBundle/DependencyInjection/Configuration.html#method_getConfigTreeBuilder", "name": "HeimrichHannot\\UtilsBundle\\DependencyInjection\\Configuration::getConfigTreeBuilder", "doc": "&quot;Generates the configuration tree builder.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\DependencyInjection", "fromLink": "HeimrichHannot/UtilsBundle/DependencyInjection.html", "link": "HeimrichHannot/UtilsBundle/DependencyInjection/UtilsBundleExtension.html", "name": "HeimrichHannot\\UtilsBundle\\DependencyInjection\\UtilsBundleExtension", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\DependencyInjection\\UtilsBundleExtension", "fromLink": "HeimrichHannot/UtilsBundle/DependencyInjection/UtilsBundleExtension.html", "link": "HeimrichHannot/UtilsBundle/DependencyInjection/UtilsBundleExtension.html#method_load", "name": "HeimrichHannot\\UtilsBundle\\DependencyInjection\\UtilsBundleExtension::load", "doc": "&quot;Loads a specific configuration.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Driver", "fromLink": "HeimrichHannot/UtilsBundle/Driver.html", "link": "HeimrichHannot/UtilsBundle/Driver/DC_Table_Utils.html", "name": "HeimrichHannot\\UtilsBundle\\Driver\\DC_Table_Utils", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Driver\\DC_Table_Utils", "fromLink": "HeimrichHannot/UtilsBundle/Driver/DC_Table_Utils.html", "link": "HeimrichHannot/UtilsBundle/Driver/DC_Table_Utils.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Driver\\DC_Table_Utils::__construct", "doc": "&quot;Initialize the object.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Driver\\DC_Table_Utils", "fromLink": "HeimrichHannot/UtilsBundle/Driver/DC_Table_Utils.html", "link": "HeimrichHannot/UtilsBundle/Driver/DC_Table_Utils.html#method_createFromModel", "name": "HeimrichHannot\\UtilsBundle\\Driver\\DC_Table_Utils::createFromModel", "doc": "&quot;Create a DataContainer instance from a given Model.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Driver\\DC_Table_Utils", "fromLink": "HeimrichHannot/UtilsBundle/Driver/DC_Table_Utils.html", "link": "HeimrichHannot/UtilsBundle/Driver/DC_Table_Utils.html#method_createFromModelData", "name": "HeimrichHannot\\UtilsBundle\\Driver\\DC_Table_Utils::createFromModelData", "doc": "&quot;Create a DataContainer instance from given model data.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\EventListener", "fromLink": "HeimrichHannot/UtilsBundle/EventListener.html", "link": "HeimrichHannot/UtilsBundle/EventListener/FrontendPageListener.html", "name": "HeimrichHannot\\UtilsBundle\\EventListener\\FrontendPageListener", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\EventListener\\FrontendPageListener", "fromLink": "HeimrichHannot/UtilsBundle/EventListener/FrontendPageListener.html", "link": "HeimrichHannot/UtilsBundle/EventListener/FrontendPageListener.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\EventListener\\FrontendPageListener::__construct", "doc": "&quot;FrontendPageListener constructor.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\EventListener\\FrontendPageListener", "fromLink": "HeimrichHannot/UtilsBundle/EventListener/FrontendPageListener.html", "link": "HeimrichHannot/UtilsBundle/EventListener/FrontendPageListener.html#method_modifyFrontendPage", "name": "HeimrichHannot\\UtilsBundle\\EventListener\\FrontendPageListener::modifyFrontendPage", "doc": "&quot;Listen on modifyFrontendPage hook.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\EventListener", "fromLink": "HeimrichHannot/UtilsBundle/EventListener.html", "link": "HeimrichHannot/UtilsBundle/EventListener/InsertTagsListener.html", "name": "HeimrichHannot\\UtilsBundle\\EventListener\\InsertTagsListener", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\EventListener\\InsertTagsListener", "fromLink": "HeimrichHannot/UtilsBundle/EventListener/InsertTagsListener.html", "link": "HeimrichHannot/UtilsBundle/EventListener/InsertTagsListener.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\EventListener\\InsertTagsListener::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\EventListener\\InsertTagsListener", "fromLink": "HeimrichHannot/UtilsBundle/EventListener/InsertTagsListener.html", "link": "HeimrichHannot/UtilsBundle/EventListener/InsertTagsListener.html#method_onReplaceInsertTags", "name": "HeimrichHannot\\UtilsBundle\\EventListener\\InsertTagsListener::onReplaceInsertTags", "doc": "&quot;Replaces calendar insert tags.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\EventListener\\InsertTagsListener", "fromLink": "HeimrichHannot/UtilsBundle/EventListener/InsertTagsListener.html", "link": "HeimrichHannot/UtilsBundle/EventListener/InsertTagsListener.html#method_replaceSupportedTags", "name": "HeimrichHannot\\UtilsBundle\\EventListener\\InsertTagsListener::replaceSupportedTags", "doc": "&quot;Replace supported tags.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\EventListener\\InsertTagsListener", "fromLink": "HeimrichHannot/UtilsBundle/EventListener/InsertTagsListener.html", "link": "HeimrichHannot/UtilsBundle/EventListener/InsertTagsListener.html#method_replaceTwigTag", "name": "HeimrichHannot\\UtilsBundle\\EventListener\\InsertTagsListener::replaceTwigTag", "doc": "&quot;Replace twig template insert tags {{twig::logo.html.twig::a:1:{s:3:\&quot;foo\&quot;;s:3:\&quot;bar\&quot;;}}}.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Event", "fromLink": "HeimrichHannot/UtilsBundle/Event.html", "link": "HeimrichHannot/UtilsBundle/Event/RenderTwigTemplateEvent.html", "name": "HeimrichHannot\\UtilsBundle\\Event\\RenderTwigTemplateEvent", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Event\\RenderTwigTemplateEvent", "fromLink": "HeimrichHannot/UtilsBundle/Event/RenderTwigTemplateEvent.html", "link": "HeimrichHannot/UtilsBundle/Event/RenderTwigTemplateEvent.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Event\\RenderTwigTemplateEvent::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Event\\RenderTwigTemplateEvent", "fromLink": "HeimrichHannot/UtilsBundle/Event/RenderTwigTemplateEvent.html", "link": "HeimrichHannot/UtilsBundle/Event/RenderTwigTemplateEvent.html#method_getTemplate", "name": "HeimrichHannot\\UtilsBundle\\Event\\RenderTwigTemplateEvent::getTemplate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Event\\RenderTwigTemplateEvent", "fromLink": "HeimrichHannot/UtilsBundle/Event/RenderTwigTemplateEvent.html", "link": "HeimrichHannot/UtilsBundle/Event/RenderTwigTemplateEvent.html#method_setTemplate", "name": "HeimrichHannot\\UtilsBundle\\Event\\RenderTwigTemplateEvent::setTemplate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Event\\RenderTwigTemplateEvent", "fromLink": "HeimrichHannot/UtilsBundle/Event/RenderTwigTemplateEvent.html", "link": "HeimrichHannot/UtilsBundle/Event/RenderTwigTemplateEvent.html#method_getContext", "name": "HeimrichHannot\\UtilsBundle\\Event\\RenderTwigTemplateEvent::getContext", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Event\\RenderTwigTemplateEvent", "fromLink": "HeimrichHannot/UtilsBundle/Event/RenderTwigTemplateEvent.html", "link": "HeimrichHannot/UtilsBundle/Event/RenderTwigTemplateEvent.html#method_setContext", "name": "HeimrichHannot\\UtilsBundle\\Event\\RenderTwigTemplateEvent::setContext", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\File", "fromLink": "HeimrichHannot/UtilsBundle/File.html", "link": "HeimrichHannot/UtilsBundle/File/FileArchiveUtil.html", "name": "HeimrichHannot\\UtilsBundle\\File\\FileArchiveUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileArchiveUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileArchiveUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileArchiveUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\File\\FileArchiveUtil::__construct", "doc": "&quot;FileArchiveUtil constructor.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileArchiveUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileArchiveUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileArchiveUtil.html#method_createFileArchive", "name": "HeimrichHannot\\UtilsBundle\\File\\FileArchiveUtil::createFileArchive", "doc": "&quot;Create a temporary zip file and return the file path.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\File", "fromLink": "HeimrichHannot/UtilsBundle/File.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_getUniqueFileNameWithinTarget", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::getUniqueFileNameWithinTarget", "doc": "&quot;Get a unique filename within given target folder, remove uniqid() suffix from file (optional, add $prefix) and append file count by name to\nfile if file with same name already exists in target folder.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_getFileList", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::getFileList", "doc": "&quot;Returns the file list for a given directory.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_formatSizeUnits", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::formatSizeUnits", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_getPathWithoutFilename", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::getPathWithoutFilename", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_getFileExtension", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::getFileExtension", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_getPathFromUuid", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::getPathFromUuid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_getFileContentFromUuid", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::getFileContentFromUuid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_getFileFromUuid", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::getFileFromUuid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_getFolderFromUuid", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::getFolderFromUuid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_addUniqueIdToFilename", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::addUniqueIdToFilename", "doc": "&quot;Add a unique identifier to a file name.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_sanitizeFileName", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::sanitizeFileName", "doc": "&quot;Sanitize filename and removes \&quot;id-\&quot; prefix generated by contao standardize method.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_sendTextAsFileToBrowser", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::sendTextAsFileToBrowser", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_getFolderFromDca", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::getFolderFromDca", "doc": "&quot;Get real folder from datacontainer attribute.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_getFileLineCount", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::getFileLineCount", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FileUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FileUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FileUtil.html#method_getPreviewFromPdf", "name": "HeimrichHannot\\UtilsBundle\\File\\FileUtil::getPreviewFromPdf", "doc": "&quot;convert pdf to png and return a preview file\ndelete the other png files.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\File", "fromLink": "HeimrichHannot/UtilsBundle/File.html", "link": "HeimrichHannot/UtilsBundle/File/FolderUtil.html", "name": "HeimrichHannot\\UtilsBundle\\File\\FolderUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FolderUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FolderUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FolderUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\File\\FolderUtil::__construct", "doc": "&quot;FolderUtil constructor.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\File\\FolderUtil", "fromLink": "HeimrichHannot/UtilsBundle/File/FolderUtil.html", "link": "HeimrichHannot/UtilsBundle/File/FolderUtil.html#method_createPublicFolder", "name": "HeimrichHannot\\UtilsBundle\\File\\FolderUtil::createPublicFolder", "doc": "&quot;Creates an symlink to the given folder in the web director, if not already exist.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Form", "fromLink": "HeimrichHannot/UtilsBundle/Form.html", "link": "HeimrichHannot/UtilsBundle/Form/FormUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Form\\FormUtil", "doc": "&quot;Class FormUtil.&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Form\\FormUtil", "fromLink": "HeimrichHannot/UtilsBundle/Form/FormUtil.html", "link": "HeimrichHannot/UtilsBundle/Form/FormUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Form\\FormUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Form\\FormUtil", "fromLink": "HeimrichHannot/UtilsBundle/Form/FormUtil.html", "link": "HeimrichHannot/UtilsBundle/Form/FormUtil.html#method_getWidgetFromAttributes", "name": "HeimrichHannot\\UtilsBundle\\Form\\FormUtil::getWidgetFromAttributes", "doc": "&quot;Get a new widget instance based on given attributes from a Data Container array.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Form\\FormUtil", "fromLink": "HeimrichHannot/UtilsBundle/Form/FormUtil.html", "link": "HeimrichHannot/UtilsBundle/Form/FormUtil.html#method_prepareSpecialValueForOutput", "name": "HeimrichHannot\\UtilsBundle\\Form\\FormUtil::prepareSpecialValueForOutput", "doc": "&quot;Prepares a special field&#039;s value. If an array is inserted, the function will call itself recursively.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Form\\FormUtil", "fromLink": "HeimrichHannot/UtilsBundle/Form/FormUtil.html", "link": "HeimrichHannot/UtilsBundle/Form/FormUtil.html#method_escapeAllHtmlEntities", "name": "HeimrichHannot\\UtilsBundle\\Form\\FormUtil::escapeAllHtmlEntities", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Form\\FormUtil", "fromLink": "HeimrichHannot/UtilsBundle/Form/FormUtil.html", "link": "HeimrichHannot/UtilsBundle/Form/FormUtil.html#method_getBackendFormField", "name": "HeimrichHannot\\UtilsBundle\\Form\\FormUtil::getBackendFormField", "doc": "&quot;Get an instance of Widget by passing fieldname and dca data.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle", "fromLink": "HeimrichHannot/UtilsBundle.html", "link": "HeimrichHannot/UtilsBundle/HeimrichHannotContaoUtilsBundle.html", "name": "HeimrichHannot\\UtilsBundle\\HeimrichHannotContaoUtilsBundle", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\HeimrichHannotContaoUtilsBundle", "fromLink": "HeimrichHannot/UtilsBundle/HeimrichHannotContaoUtilsBundle.html", "link": "HeimrichHannot/UtilsBundle/HeimrichHannotContaoUtilsBundle.html#method_getContainerExtension", "name": "HeimrichHannot\\UtilsBundle\\HeimrichHannotContaoUtilsBundle::getContainerExtension", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Image", "fromLink": "HeimrichHannot/UtilsBundle/Image.html", "link": "HeimrichHannot/UtilsBundle/Image/ImageUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Image\\ImageUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Image\\ImageUtil", "fromLink": "HeimrichHannot/UtilsBundle/Image/ImageUtil.html", "link": "HeimrichHannot/UtilsBundle/Image/ImageUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Image\\ImageUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Image\\ImageUtil", "fromLink": "HeimrichHannot/UtilsBundle/Image/ImageUtil.html", "link": "HeimrichHannot/UtilsBundle/Image/ImageUtil.html#method_addToTemplateData", "name": "HeimrichHannot\\UtilsBundle\\Image\\ImageUtil::addToTemplateData", "doc": "&quot;Add an image to a template.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Image\\ImageUtil", "fromLink": "HeimrichHannot/UtilsBundle/Image/ImageUtil.html", "link": "HeimrichHannot/UtilsBundle/Image/ImageUtil.html#method_getPixelValue", "name": "HeimrichHannot\\UtilsBundle\\Image\\ImageUtil::getPixelValue", "doc": "&quot;Convert sizes like 2em, 10cm or 12pt to pixels.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Location", "fromLink": "HeimrichHannot/UtilsBundle/Location.html", "link": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil", "fromLink": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html", "link": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil", "fromLink": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html", "link": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html#method_computeCoordinatesByArray", "name": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil::computeCoordinatesByArray", "doc": "&quot;Computes the coordinates from a given address. Supported array keys are:.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil", "fromLink": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html", "link": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html#method_computeCoordinatesByString", "name": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil::computeCoordinatesByString", "doc": "&quot;Computes the coordinates from a given address. Supported array keys are:.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil", "fromLink": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html", "link": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html#method_computeCoordinatesInSaveCallback", "name": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil::computeCoordinatesInSaveCallback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil", "fromLink": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html", "link": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html#method_getCoordinatesFromKml", "name": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil::getCoordinatesFromKml", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil", "fromLink": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html", "link": "HeimrichHannot/UtilsBundle/Location/LocationUtil.html#method_getCoordinatesFromGpx", "name": "HeimrichHannot\\UtilsBundle\\Location\\LocationUtil::getCoordinatesFromGpx", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Member", "fromLink": "HeimrichHannot/UtilsBundle/Member.html", "link": "HeimrichHannot/UtilsBundle/Member/MemberUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Member\\MemberUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Member\\MemberUtil", "fromLink": "HeimrichHannot/UtilsBundle/Member/MemberUtil.html", "link": "HeimrichHannot/UtilsBundle/Member/MemberUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Member\\MemberUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Member\\MemberUtil", "fromLink": "HeimrichHannot/UtilsBundle/Member/MemberUtil.html", "link": "HeimrichHannot/UtilsBundle/Member/MemberUtil.html#method_addHomeDir", "name": "HeimrichHannot\\UtilsBundle\\Member\\MemberUtil::addHomeDir", "doc": "&quot;Adds a new home dir to a member. Therefore a folder named with the members&#039;s id is created in $varRootFolder.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Member\\MemberUtil", "fromLink": "HeimrichHannot/UtilsBundle/Member/MemberUtil.html", "link": "HeimrichHannot/UtilsBundle/Member/MemberUtil.html#method_getHomeDir", "name": "HeimrichHannot\\UtilsBundle\\Member\\MemberUtil::getHomeDir", "doc": "&quot;Returns a member home dir and creates one, if desired.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Member\\MemberUtil", "fromLink": "HeimrichHannot/UtilsBundle/Member/MemberUtil.html", "link": "HeimrichHannot/UtilsBundle/Member/MemberUtil.html#method_findActiveByGroups", "name": "HeimrichHannot\\UtilsBundle\\Member\\MemberUtil::findActiveByGroups", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Member\\MemberUtil", "fromLink": "HeimrichHannot/UtilsBundle/Member/MemberUtil.html", "link": "HeimrichHannot/UtilsBundle/Member/MemberUtil.html#method_findOrCreate", "name": "HeimrichHannot\\UtilsBundle\\Member\\MemberUtil::findOrCreate", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Model", "fromLink": "HeimrichHannot/UtilsBundle/Model.html", "link": "HeimrichHannot/UtilsBundle/Model/CfgTagModel.html", "name": "HeimrichHannot\\UtilsBundle\\Model\\CfgTagModel", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\CfgTagModel", "fromLink": "HeimrichHannot/UtilsBundle/Model/CfgTagModel.html", "link": "HeimrichHannot/UtilsBundle/Model/CfgTagModel.html#method_findAllBySource", "name": "HeimrichHannot\\UtilsBundle\\Model\\CfgTagModel::findAllBySource", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\CfgTagModel", "fromLink": "HeimrichHannot/UtilsBundle/Model/CfgTagModel.html", "link": "HeimrichHannot/UtilsBundle/Model/CfgTagModel.html#method_getSourcesAsOptions", "name": "HeimrichHannot\\UtilsBundle\\Model\\CfgTagModel::getSourcesAsOptions", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Model", "fromLink": "HeimrichHannot/UtilsBundle/Model.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_setDefaultsFromDca", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::setDefaultsFromDca", "doc": "&quot;Set the entity defaults from dca config (for new model entry).&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_findModelInstanceByPk", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::findModelInstanceByPk", "doc": "&quot;Returns a model instance if for a given table and id(primary key).&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_findModelInstancesBy", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::findModelInstancesBy", "doc": "&quot;Returns model instances by given table and search criteria.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_findOneModelInstanceBy", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::findOneModelInstanceBy", "doc": "&quot;Return a single model instance by table and search criteria.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_findMultipleModelInstancesByIds", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::findMultipleModelInstancesByIds", "doc": "&quot;Returns multiple model instances by given table and ids.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_findModelInstanceByIdOrAlias", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::findModelInstanceByIdOrAlias", "doc": "&quot;Returns multiple model instances by given table and id or alias.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_callModelMethod", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::callModelMethod", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_fixTablePrefixForDcMultilingual", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::fixTablePrefixForDcMultilingual", "doc": "&quot;Fixes existing table prefixed already aliased in MultilingualQueryBuilder::buildQueryBuilderForFind().&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_getDcMultilingualTranslationRecord", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::getDcMultilingualTranslationRecord", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_getCurrentDcMultilingualLanguage", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::getCurrentDcMultilingualLanguage", "doc": "&quot;Get the current dc_multilingual language even DC_Multilingual::edit() didn&#039;t run.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_getDcMultilingualTranslatableLanguages", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::getDcMultilingualTranslatableLanguages", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_getDcMultilingualRootPageLanguages", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::getDcMultilingualRootPageLanguages", "doc": "&quot;Get the list of languages based on root pages.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_findRootParentRecursively", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::findRootParentRecursively", "doc": "&quot;Recursively finds the root parent.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_findParentsRecursively", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::findParentsRecursively", "doc": "&quot;Returns an array of a model instance&#039;s parents in ascending order, i.e. the root parent comes first.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_findAllModelInstances", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::findAllModelInstances", "doc": "&quot;Find all model instances for a given table.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_computeStringPattern", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::computeStringPattern", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_getModelInstanceIfId", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::getModelInstanceIfId", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_hasValueChanged", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::hasValueChanged", "doc": "&quot;Determine if given value is newer than DataContainer value.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_getModelInstanceFieldValue", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::getModelInstanceFieldValue", "doc": "&quot;Get model instance value for given field.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_findModulePages", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::findModulePages", "doc": "&quot;Find module pages.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil", "fromLink": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html", "link": "HeimrichHannot/UtilsBundle/Model/ModelUtil.html#method_addPublishedCheckToModelArrays", "name": "HeimrichHannot\\UtilsBundle\\Model\\ModelUtil::addPublishedCheckToModelArrays", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Module", "fromLink": "HeimrichHannot/UtilsBundle/Module.html", "link": "HeimrichHannot/UtilsBundle/Module/ModuleUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Module\\ModuleUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Module\\ModuleUtil", "fromLink": "HeimrichHannot/UtilsBundle/Module/ModuleUtil.html", "link": "HeimrichHannot/UtilsBundle/Module/ModuleUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Module\\ModuleUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Module\\ModuleUtil", "fromLink": "HeimrichHannot/UtilsBundle/Module/ModuleUtil.html", "link": "HeimrichHannot/UtilsBundle/Module/ModuleUtil.html#method_getClassByModule", "name": "HeimrichHannot\\UtilsBundle\\Module\\ModuleUtil::getClassByModule", "doc": "&quot;Get the class name of a given module.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Module\\ModuleUtil", "fromLink": "HeimrichHannot/UtilsBundle/Module/ModuleUtil.html", "link": "HeimrichHannot/UtilsBundle/Module/ModuleUtil.html#method_isSubModuleOf", "name": "HeimrichHannot\\UtilsBundle\\Module\\ModuleUtil::isSubModuleOf", "doc": "&quot;Check whether a module is a sub module of another.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Module\\ModuleUtil", "fromLink": "HeimrichHannot/UtilsBundle/Module/ModuleUtil.html", "link": "HeimrichHannot/UtilsBundle/Module/ModuleUtil.html#method_getModuleClass", "name": "HeimrichHannot\\UtilsBundle\\Module\\ModuleUtil::getModuleClass", "doc": "&quot;Get the full qualified class name for a given module.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Module\\ModuleUtil", "fromLink": "HeimrichHannot/UtilsBundle/Module/ModuleUtil.html", "link": "HeimrichHannot/UtilsBundle/Module/ModuleUtil.html#method_getModulesByType", "name": "HeimrichHannot\\UtilsBundle\\Module\\ModuleUtil::getModulesByType", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Pagination", "fromLink": "HeimrichHannot/UtilsBundle/Pagination.html", "link": "HeimrichHannot/UtilsBundle/Pagination/TextualPagination.html", "name": "HeimrichHannot\\UtilsBundle\\Pagination\\TextualPagination", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pagination\\TextualPagination", "fromLink": "HeimrichHannot/UtilsBundle/Pagination/TextualPagination.html", "link": "HeimrichHannot/UtilsBundle/Pagination/TextualPagination.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Pagination\\TextualPagination::__construct", "doc": "&quot;Set the number of rows, the number of results per pages and the number of links.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pagination\\TextualPagination", "fromLink": "HeimrichHannot/UtilsBundle/Pagination/TextualPagination.html", "link": "HeimrichHannot/UtilsBundle/Pagination/TextualPagination.html#method_getItemsAsArray", "name": "HeimrichHannot\\UtilsBundle\\Pagination\\TextualPagination::getItemsAsArray", "doc": "&quot;Generate all page links and return them as array.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf", "fromLink": "HeimrichHannot/UtilsBundle/Pdf.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::__construct", "doc": "&quot;constructor.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_setDefaultConfig", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::setDefaultConfig", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_prepare", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::prepare", "doc": "&quot;Prepare the current object.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_generate", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::generate", "doc": "&quot;Generate the pdf.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_getHtml", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::getHtml", "doc": "&quot;Get html including styles.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_setHtml", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::setHtml", "doc": "&quot;Set html including styles.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_getPdf", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::getPdf", "doc": "&quot;Get current pdf object.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_getFileName", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::getFileName", "doc": "&quot;Get the pdf file name.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_setFileName", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::setFileName", "doc": "&quot;Set the pdf filename.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_getConfig", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::getConfig", "doc": "&quot;Get the pdf config.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_setConfig", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::setConfig", "doc": "&quot;Set pdf config, replace default with custom config.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_mergeConfig", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::mergeConfig", "doc": "&quot;Merge current pdf config with given.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_isPrepared", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::isPrepared", "doc": "&quot;Check if prepare was already triggered.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_getFolder", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::getFolder", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/AbstractPdfWriter.html#method_setFolder", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\AbstractPdfWriter::setFolder", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf", "fromLink": "HeimrichHannot/UtilsBundle/Pdf.html", "link": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter::__construct", "doc": "&quot;TCPDFWriter constructor.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html#method_setDefaultConfig", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter::setDefaultConfig", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html#method_getTemplate", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter::getTemplate", "doc": "&quot;Get the master template path.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html#method_setTemplate", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter::setTemplate", "doc": "&quot;Set the master template path.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html#method_prepare", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter::prepare", "doc": "&quot;Prepare the current fpdi object.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html#method_generate", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter::generate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html#method_getPdf", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter::getPdf", "doc": "&quot;Get current pdf object.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html#method_addFont", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter::addFont", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/FPDIWriter.html#method_isPrepared", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\FPDIWriter::isPrepared", "doc": "&quot;Check if prepare was already triggered.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf", "fromLink": "HeimrichHannot/UtilsBundle/Pdf.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfPreview.html", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfPreview", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfPreview", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfPreview.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfPreview.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfPreview::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfPreview", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfPreview.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfPreview.html#method_getCachedPdfPreview", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfPreview::getCachedPdfPreview", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfPreview", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfPreview.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfPreview.html#method_generatePdfPreview", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfPreview::generatePdfPreview", "doc": "&quot;Generate a image preview of the given pdf.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfPreview", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfPreview.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfPreview.html#method_spatiePdf", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfPreview::spatiePdf", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfPreview", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfPreview.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfPreview.html#method_alchemyPdf", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfPreview::alchemyPdf", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf", "fromLink": "HeimrichHannot/UtilsBundle/Pdf.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter::__construct", "doc": "&quot;constructor.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html#method_setDefaultConfig", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter::setDefaultConfig", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html#method_getTemplate", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter::getTemplate", "doc": "&quot;Get the master template path.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html#method_setTemplate", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter::setTemplate", "doc": "&quot;Set the master template path.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html#method_prepare", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter::prepare", "doc": "&quot;Prepare the current mpdf object.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html#method_generate", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter::generate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html#method_addFontDirectories", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter::addFontDirectories", "doc": "&quot;Add font directories to the config.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter", "fromLink": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html", "link": "HeimrichHannot/UtilsBundle/Pdf/PdfWriter.html#method_getPdf", "name": "HeimrichHannot\\UtilsBundle\\Pdf\\PdfWriter::getPdf", "doc": "&quot;Get current pdf object.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Request", "fromLink": "HeimrichHannot/UtilsBundle/Request.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest::__construct", "doc": "&quot;CurlRequest constructor.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html#method_init", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest::init", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html#method_setOption", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest::setOption", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html#method_execute", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest::execute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html#method_getInfo", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest::getInfo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequest.html#method_close", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequest::close", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Request", "fromLink": "HeimrichHannot/UtilsBundle/Request.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html#method_request", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil::request", "doc": "&quot;Executes a curl request while taking.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html#method_postRequest", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil::postRequest", "doc": "&quot;Create a curl post request.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html#method_recursiveGetRequest", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil::recursiveGetRequest", "doc": "&quot;Recursivly send get request and terminates if termination condition is given or max request count is reached.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html#method_recursivePostRequest", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil::recursivePostRequest", "doc": "&quot;Recursivly send post request and terminates if termination condition is given or max request count is reached.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html#method_splitResponseHeaderAndBody", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil::splitResponseHeaderAndBody", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html#method_prepareHeaderArrayForPrint", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil::prepareHeaderArrayForPrint", "doc": "&quot;Creates a linebreak separated list of the headers in $arrHeaders -&gt; see request() and postRequest().&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html#method_getHandle", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil::getHandle", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html#method_setHandle", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil::setHandle", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html#method_createCurlHandle", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil::createCurlHandle", "doc": "&quot;Create the curl handle.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil", "fromLink": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html", "link": "HeimrichHannot/UtilsBundle/Request/CurlRequestUtil.html#method_prepareHeaders", "name": "HeimrichHannot\\UtilsBundle\\Request\\CurlRequestUtil::prepareHeaders", "doc": "&quot;Prepare headers for curl handle.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Request", "fromLink": "HeimrichHannot/UtilsBundle/Request.html", "link": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html", "name": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface", "fromLink": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html", "link": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html#method_init", "name": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface::init", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface", "fromLink": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html", "link": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html#method_setOption", "name": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface::setOption", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface", "fromLink": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html", "link": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html#method_execute", "name": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface::execute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface", "fromLink": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html", "link": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html#method_getInfo", "name": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface::getInfo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface", "fromLink": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html", "link": "HeimrichHannot/UtilsBundle/Request/HttpRequestInterface.html#method_close", "name": "HeimrichHannot\\UtilsBundle\\Request\\HttpRequestInterface::close", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Routing", "fromLink": "HeimrichHannot/UtilsBundle/Routing.html", "link": "HeimrichHannot/UtilsBundle/Routing/RoutingUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Routing\\RoutingUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Routing\\RoutingUtil", "fromLink": "HeimrichHannot/UtilsBundle/Routing/RoutingUtil.html", "link": "HeimrichHannot/UtilsBundle/Routing/RoutingUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Routing\\RoutingUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Routing\\RoutingUtil", "fromLink": "HeimrichHannot/UtilsBundle/Routing/RoutingUtil.html", "link": "HeimrichHannot/UtilsBundle/Routing/RoutingUtil.html#method_generateBackendRoute", "name": "HeimrichHannot\\UtilsBundle\\Routing\\RoutingUtil::generateBackendRoute", "doc": "&quot;Generate a backend route with token and referer.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Rsce", "fromLink": "HeimrichHannot/UtilsBundle/Rsce.html", "link": "HeimrichHannot/UtilsBundle/Rsce/RsceUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Rsce\\RsceUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Rsce\\RsceUtil", "fromLink": "HeimrichHannot/UtilsBundle/Rsce/RsceUtil.html", "link": "HeimrichHannot/UtilsBundle/Rsce/RsceUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Rsce\\RsceUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Rsce\\RsceUtil", "fromLink": "HeimrichHannot/UtilsBundle/Rsce/RsceUtil.html", "link": "HeimrichHannot/UtilsBundle/Rsce/RsceUtil.html#method_explodeRsceData", "name": "HeimrichHannot\\UtilsBundle\\Rsce\\RsceUtil::explodeRsceData", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Salutation", "fromLink": "HeimrichHannot/UtilsBundle/Salutation.html", "link": "HeimrichHannot/UtilsBundle/Salutation/SalutationUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Salutation\\SalutationUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Salutation\\SalutationUtil", "fromLink": "HeimrichHannot/UtilsBundle/Salutation/SalutationUtil.html", "link": "HeimrichHannot/UtilsBundle/Salutation/SalutationUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Salutation\\SalutationUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Salutation\\SalutationUtil", "fromLink": "HeimrichHannot/UtilsBundle/Salutation/SalutationUtil.html", "link": "HeimrichHannot/UtilsBundle/Salutation/SalutationUtil.html#method_createNameByFields", "name": "HeimrichHannot\\UtilsBundle\\Salutation\\SalutationUtil::createNameByFields", "doc": "&quot;Creates complete names by inserting an array of the person&#039;s data.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Salutation\\SalutationUtil", "fromLink": "HeimrichHannot/UtilsBundle/Salutation/SalutationUtil.html", "link": "HeimrichHannot/UtilsBundle/Salutation/SalutationUtil.html#method_createSalutation", "name": "HeimrichHannot\\UtilsBundle\\Salutation\\SalutationUtil::createSalutation", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Security", "fromLink": "HeimrichHannot/UtilsBundle/Security.html", "link": "HeimrichHannot/UtilsBundle/Security/CodeUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Security\\CodeUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Security\\CodeUtil", "fromLink": "HeimrichHannot/UtilsBundle/Security/CodeUtil.html", "link": "HeimrichHannot/UtilsBundle/Security/CodeUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Security\\CodeUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Security\\CodeUtil", "fromLink": "HeimrichHannot/UtilsBundle/Security/CodeUtil.html", "link": "HeimrichHannot/UtilsBundle/Security/CodeUtil.html#method_generate", "name": "HeimrichHannot\\UtilsBundle\\Security\\CodeUtil::generate", "doc": "&quot;Generates a code by certain criteria.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Security", "fromLink": "HeimrichHannot/UtilsBundle/Security.html", "link": "HeimrichHannot/UtilsBundle/Security/EncryptionUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Security\\EncryptionUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Security\\EncryptionUtil", "fromLink": "HeimrichHannot/UtilsBundle/Security/EncryptionUtil.html", "link": "HeimrichHannot/UtilsBundle/Security/EncryptionUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Security\\EncryptionUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Security\\EncryptionUtil", "fromLink": "HeimrichHannot/UtilsBundle/Security/EncryptionUtil.html", "link": "HeimrichHannot/UtilsBundle/Security/EncryptionUtil.html#method_encrypt", "name": "HeimrichHannot\\UtilsBundle\\Security\\EncryptionUtil::encrypt", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Security\\EncryptionUtil", "fromLink": "HeimrichHannot/UtilsBundle/Security/EncryptionUtil.html", "link": "HeimrichHannot/UtilsBundle/Security/EncryptionUtil.html#method_decrypt", "name": "HeimrichHannot\\UtilsBundle\\Security\\EncryptionUtil::decrypt", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\String", "fromLink": "HeimrichHannot/UtilsBundle/String.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_startsWith", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::startsWith", "doc": "&quot;Check for the occurrence at the start of the string.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_endsWith", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::endsWith", "doc": "&quot;Check for the occurrence at the end of the string.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_camelCaseToDashed", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::camelCaseToDashed", "doc": "&quot;Convert a camel case string to a dashed string.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_camelCaseToSnake", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::camelCaseToSnake", "doc": "&quot;Convert a camel case string to a snake cased string.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_randomChar", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::randomChar", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_randomLetter", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::randomLetter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_randomNumber", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::randomNumber", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_random", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::random", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_truncateHtml", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::truncateHtml", "doc": "&quot;Truncates a given string respecting html element.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_pregReplaceLast", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::pregReplaceLast", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_removeLeadingAndTrailingSlash", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::removeLeadingAndTrailingSlash", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_removeLeadingString", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::removeLeadingString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_removeTrailingString", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::removeTrailingString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_restoreBasicEntities", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::restoreBasicEntities", "doc": "&quot;Restore basic entities.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_convertToInlineCss", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::convertToInlineCss", "doc": "&quot;Convert css into inline styles.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_html2Text", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::html2Text", "doc": "&quot;Converts html to text.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_lowerCase", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::lowerCase", "doc": "&quot;Convenience method for lower casing in a save callback.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_ensureLineBreaks", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::ensureLineBreaks", "doc": "&quot;Ensure line breaks for several languages.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_convertXmlToArray", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::convertXmlToArray", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\String\\StringUtil", "fromLink": "HeimrichHannot/UtilsBundle/String/StringUtil.html", "link": "HeimrichHannot/UtilsBundle/String/StringUtil.html#method_replaceUnicodeEmojisByHtml", "name": "HeimrichHannot\\UtilsBundle\\String\\StringUtil::replaceUnicodeEmojisByHtml", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Template", "fromLink": "HeimrichHannot/UtilsBundle/Template.html", "link": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html", "link": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html", "link": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html#method_getAllTemplates", "name": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil::getAllTemplates", "doc": "&quot;Get a list of all available templates.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html", "link": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html#method_getTemplateGroup", "name": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil::getTemplateGroup", "doc": "&quot;Return all template files of a particular group as array.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html", "link": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html#method_getTemplate", "name": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil::getTemplate", "doc": "&quot;Find a particular template file and return its path.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html", "link": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html#method_findTemplates", "name": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil::findTemplates", "doc": "&quot;Return the files matching a GLOB pattern.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html", "link": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html#method_removeTemplateComment", "name": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil::removeTemplateComment", "doc": "&quot;remove TEMPLATE START\/END comment from template if in debug mode.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html", "link": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html#method_isTemplatePartEmpty", "name": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil::isTemplatePartEmpty", "doc": "&quot;Return true, if the template part is empty.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html", "link": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html#method_getPageAliasAsCssClass", "name": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil::getPageAliasAsCssClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html", "link": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html#method_renderTwigTemplate", "name": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil::renderTwigTemplate", "doc": "&quot;Renders a twig template with data.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil", "fromLink": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html", "link": "HeimrichHannot/UtilsBundle/Template/TemplateUtil.html#method_getBundleTemplate", "name": "HeimrichHannot\\UtilsBundle\\Template\\TemplateUtil::getBundleTemplate", "doc": "&quot;Find a particular template file within all bundles and return its path.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Twig", "fromLink": "HeimrichHannot/UtilsBundle/Twig.html", "link": "HeimrichHannot/UtilsBundle/Twig/ArrayExtension.html", "name": "HeimrichHannot\\UtilsBundle\\Twig\\ArrayExtension", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\ArrayExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/ArrayExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/ArrayExtension.html#method_getFilters", "name": "HeimrichHannot\\UtilsBundle\\Twig\\ArrayExtension::getFilters", "doc": "&quot;Get list of twig filters.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\ArrayExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/ArrayExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/ArrayExtension.html#method_deserialize", "name": "HeimrichHannot\\UtilsBundle\\Twig\\ArrayExtension::deserialize", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Twig", "fromLink": "HeimrichHannot/UtilsBundle/Twig.html", "link": "HeimrichHannot/UtilsBundle/Twig/DateExtension.html", "name": "HeimrichHannot\\UtilsBundle\\Twig\\DateExtension", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\DateExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/DateExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/DateExtension.html#method_getFilters", "name": "HeimrichHannot\\UtilsBundle\\Twig\\DateExtension::getFilters", "doc": "&quot;Get list of twig filters.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\DateExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/DateExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/DateExtension.html#method_getLocalizedDate", "name": "HeimrichHannot\\UtilsBundle\\Twig\\DateExtension::getLocalizedDate", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Twig", "fromLink": "HeimrichHannot/UtilsBundle/Twig.html", "link": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html", "name": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html#method_getFilters", "name": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension::getFilters", "doc": "&quot;Get list of twig filters.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html#method_getDownloadData", "name": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension::getDownloadData", "doc": "&quot;Get download data based on given path\/uuid.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html#method_getDownload", "name": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension::getDownload", "doc": "&quot;Get download based on given path\/uuid.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html#method_getDownloadLink", "name": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension::getDownloadLink", "doc": "&quot;Get download link &lt;code&gt;?file=&lt;\/code&gt; based on given path\/uuid.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html#method_getDownloadPath", "name": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension::getDownloadPath", "doc": "&quot;Get download path based on given path\/uuid.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/DownloadExtension.html#method_getDownloadTitle", "name": "HeimrichHannot\\UtilsBundle\\Twig\\DownloadExtension::getDownloadTitle", "doc": "&quot;Get download title based on given path\/uuid.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Twig", "fromLink": "HeimrichHannot/UtilsBundle/Twig.html", "link": "HeimrichHannot/UtilsBundle/Twig/FileExtension.html", "name": "HeimrichHannot\\UtilsBundle\\Twig\\FileExtension", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\FileExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/FileExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/FileExtension.html#method_getFilters", "name": "HeimrichHannot\\UtilsBundle\\Twig\\FileExtension::getFilters", "doc": "&quot;Get list of twig filters.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\FileExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/FileExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/FileExtension.html#method_getFileData", "name": "HeimrichHannot\\UtilsBundle\\Twig\\FileExtension::getFileData", "doc": "&quot;Get file data based on given uuid.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\FileExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/FileExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/FileExtension.html#method_getFilePath", "name": "HeimrichHannot\\UtilsBundle\\Twig\\FileExtension::getFilePath", "doc": "&quot;Get file path based on given uuid.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Twig", "fromLink": "HeimrichHannot/UtilsBundle/Twig.html", "link": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html", "name": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html#method_getFilters", "name": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension::getFilters", "doc": "&quot;Get list of twig filters.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html#method_getImage", "name": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension::getImage", "doc": "&quot;Get image based on given path\/uuid.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html#method_getImageData", "name": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension::getImageData", "doc": "&quot;Get image data based on given path\/uuid.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html#method_getImageCaption", "name": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension::getImageCaption", "doc": "&quot;Get image caption based on given path\/uuid.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html#method_getImageWidth", "name": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension::getImageWidth", "doc": "&quot;Get image width based on given path\/uuid.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html#method_getImageGallery", "name": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension::getImageGallery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/ImageExtension.html#method_getImageSize", "name": "HeimrichHannot\\UtilsBundle\\Twig\\ImageExtension::getImageSize", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Twig", "fromLink": "HeimrichHannot/UtilsBundle/Twig.html", "link": "HeimrichHannot/UtilsBundle/Twig/StringExtension.html", "name": "HeimrichHannot\\UtilsBundle\\Twig\\StringExtension", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\StringExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/StringExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/StringExtension.html#method_getFilters", "name": "HeimrichHannot\\UtilsBundle\\Twig\\StringExtension::getFilters", "doc": "&quot;Get list of twig filters.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Twig\\StringExtension", "fromLink": "HeimrichHannot/UtilsBundle/Twig/StringExtension.html", "link": "HeimrichHannot/UtilsBundle/Twig/StringExtension.html#method_autolink", "name": "HeimrichHannot\\UtilsBundle\\Twig\\StringExtension::autolink", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\Url", "fromLink": "HeimrichHannot/UtilsBundle/Url.html", "link": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html", "name": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil", "fromLink": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html", "link": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil", "fromLink": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html", "link": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html#method_isNewVisitor", "name": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil::isNewVisitor", "doc": "&quot;Detect if user already visited our domain before.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil", "fromLink": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html", "link": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html#method_getCurrentUrl", "name": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil::getCurrentUrl", "doc": "&quot;Return the current url with requestUri.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil", "fromLink": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html", "link": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html#method_addQueryString", "name": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil::addQueryString", "doc": "&quot;Add a query string to the given URI string or page ID.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil", "fromLink": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html", "link": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html#method_removeQueryString", "name": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil::removeQueryString", "doc": "&quot;Remove query parameters from the current URL.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil", "fromLink": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html", "link": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html#method_getJumpToPageObject", "name": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil::getJumpToPageObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil", "fromLink": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html", "link": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html#method_getJumpToPageUrl", "name": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil::getJumpToPageUrl", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil", "fromLink": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html", "link": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html#method_addAutoItemToPage", "name": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil::addAutoItemToPage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil", "fromLink": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html", "link": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html#method_redirect", "name": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil::redirect", "doc": "&quot;Redirect to another page.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil", "fromLink": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html", "link": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html#method_addURIScheme", "name": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil::addURIScheme", "doc": "&quot;Add a url scheme to a given url.&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil", "fromLink": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html", "link": "HeimrichHannot/UtilsBundle/Url/UrlUtil.html#method_prepareUrl", "name": "HeimrichHannot\\UtilsBundle\\Url\\UrlUtil::prepareUrl", "doc": "&quot;Prepare URL from ID and keep query string from current string.&quot;"},
            
            {"type": "Class", "fromName": "HeimrichHannot\\UtilsBundle\\User", "fromLink": "HeimrichHannot/UtilsBundle/User.html", "link": "HeimrichHannot/UtilsBundle/User/UserUtil.html", "name": "HeimrichHannot\\UtilsBundle\\User\\UserUtil", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\User\\UserUtil", "fromLink": "HeimrichHannot/UtilsBundle/User/UserUtil.html", "link": "HeimrichHannot/UtilsBundle/User/UserUtil.html#method___construct", "name": "HeimrichHannot\\UtilsBundle\\User\\UserUtil::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\User\\UserUtil", "fromLink": "HeimrichHannot/UtilsBundle/User/UserUtil.html", "link": "HeimrichHannot/UtilsBundle/User/UserUtil.html#method_findActiveByGroups", "name": "HeimrichHannot\\UtilsBundle\\User\\UserUtil::findActiveByGroups", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HeimrichHannot\\UtilsBundle\\User\\UserUtil", "fromLink": "HeimrichHannot/UtilsBundle/User/UserUtil.html", "link": "HeimrichHannot/UtilsBundle/User/UserUtil.html#method_hasAccessToField", "name": "HeimrichHannot\\UtilsBundle\\User\\UserUtil::hasAccessToField", "doc": "&quot;&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


